diff -ru OrcaSlicer-2.2.0.old/src/libslic3r/GCodeSender.cpp OrcaSlicer-2.2.0/src/libslic3r/GCodeSender.cpp
--- OrcaSlicer-2.2.0.old/src/libslic3r/GCodeSender.cpp	2024-12-15 19:13:45.628341673 +0300
+++ OrcaSlicer-2.2.0/src/libslic3r/GCodeSender.cpp	2024-12-15 19:13:53.309681330 +0300
@@ -104,10 +104,11 @@
     
     // this gives some work to the io_service before it is started
     // (post() runs the supplied function in its thread)
-    this->io.post(boost::bind(&GCodeSender::do_read, this));
+    boost::asio::post(this->io, boost::bind(&GCodeSender::do_read, this));
+    //this->io.get_executor().post(boost::bind(&GCodeSender::do_read, this));
     
     // start reading in the background thread
-    boost::thread t(boost::bind(&boost::asio::io_service::run, &this->io));
+    boost::thread t(boost::bind(&boost::asio::io_context::run, &this->io));
     this->background_thread.swap(t);
     
     // always send a M105 to check for connection because firmware might be silent on connect
@@ -164,7 +165,8 @@
     if (!this->open) return;
     this->open = false;
     this->connected = false;
-    this->io.post(boost::bind(&GCodeSender::do_close, this));
+    boost::asio::post(this->io, boost::bind(&GCodeSender::do_close, this));
+    //this->io.get_executor().post(boost::bind(&GCodeSender::do_close, this));
     this->background_thread.join();
     this->io.reset();
     /*
@@ -457,7 +459,9 @@
 void
 GCodeSender::send()
 {
-    this->io.post(boost::bind(&GCodeSender::do_send, this));
+
+    boost::asio::post(this->io, boost::bind(&GCodeSender::do_send, this));
+    //this->io.get_executor().post(boost::bind(&GCodeSender::do_send, this));
 }
 
 void
diff -ru OrcaSlicer-2.2.0.old/src/libslic3r/GCodeSender.hpp OrcaSlicer-2.2.0/src/libslic3r/GCodeSender.hpp
--- OrcaSlicer-2.2.0.old/src/libslic3r/GCodeSender.hpp	2024-12-15 19:13:45.628341673 +0300
+++ OrcaSlicer-2.2.0/src/libslic3r/GCodeSender.hpp	2024-12-15 19:13:53.309681330 +0300
@@ -35,7 +35,7 @@
     void reset();
     
     private:
-    asio::io_service io;
+    asio::io_context io;
     asio::serial_port serial;
     boost::thread background_thread;
     boost::asio::streambuf read_buffer, write_buffer;
diff -ru OrcaSlicer-2.2.0.old/src/slic3r/GUI/HttpServer.hpp OrcaSlicer-2.2.0/src/slic3r/GUI/HttpServer.hpp
--- OrcaSlicer-2.2.0.old/src/slic3r/GUI/HttpServer.hpp	2024-12-15 19:13:45.628341673 +0300
+++ OrcaSlicer-2.2.0/src/slic3r/GUI/HttpServer.hpp	2024-12-15 19:13:53.309681330 +0300
@@ -115,7 +115,7 @@
     {
     public:
         HttpServer&                        server;
-        boost::asio::io_service            io_service;
+        boost::asio::io_context            io_service;
         boost::asio::ip::tcp::acceptor     acceptor;
         std::set<std::shared_ptr<session>> sessions;
 
diff -ru OrcaSlicer-2.2.0.old/src/slic3r/Utils/Bonjour.cpp OrcaSlicer-2.2.0/src/slic3r/Utils/Bonjour.cpp
--- OrcaSlicer-2.2.0.old/src/slic3r/Utils/Bonjour.cpp	2024-12-15 19:13:45.628341673 +0300
+++ OrcaSlicer-2.2.0/src/slic3r/Utils/Bonjour.cpp	2024-12-15 19:13:53.309681330 +0300
@@ -620,7 +620,7 @@
 	buffer.resize(DnsMessage::MAX_SIZE);
 }
 
-UdpSocket::UdpSocket( Bonjour::ReplyFn replyfn, const asio::ip::address& multicast_address, const asio::ip::address& interface_address, std::shared_ptr< boost::asio::io_service > io_service)
+UdpSocket::UdpSocket( Bonjour::ReplyFn replyfn, const asio::ip::address& multicast_address, const asio::ip::address& interface_address, std::shared_ptr< boost::asio::io_context > io_service)
 	: replyfn(replyfn)
 	, multicast_address(multicast_address)
 	, socket(*io_service)
@@ -654,7 +654,7 @@
 }
 
 
-UdpSocket::UdpSocket( Bonjour::ReplyFn replyfn, const asio::ip::address& multicast_address, std::shared_ptr< boost::asio::io_service > io_service)
+UdpSocket::UdpSocket( Bonjour::ReplyFn replyfn, const asio::ip::address& multicast_address, std::shared_ptr< boost::asio::io_context > io_service)
 	: replyfn(replyfn)
 	, multicast_address(multicast_address)
 	, socket(*io_service)
@@ -710,7 +710,7 @@
 	// let io_service to handle the datagram on session
 	// from boost documentation io_service::post:
 	// The io_service guarantees that the handler will only be called in a thread in which the run(), run_one(), poll() or poll_one() member functions is currently being invoked.
-	io_service->post(boost::bind(&UdpSession::handle_receive, session, error, bytes));
+	boost::asio::post(*io_service, boost::bind(&UdpSession::handle_receive, session, error, bytes));
 	// immediately accept new datagrams
 	async_receive();
 }
@@ -867,7 +867,7 @@
 {
 	service_dn = (boost::format("_%1%._%2%.local") % service % protocol).str();
 
-	std::shared_ptr< boost::asio::io_service > io_service(new boost::asio::io_service);
+	std::shared_ptr< boost::asio::io_context > io_service(new boost::asio::io_context);
 
 	std::vector<LookupSocket*> sockets;
 
@@ -962,7 +962,7 @@
 			rpls.push_back(reply);
 	};
 
-	std::shared_ptr< boost::asio::io_service > io_service(new boost::asio::io_service);
+	std::shared_ptr< boost::asio::io_context > io_service(new boost::asio::io_context);
 	std::vector<ResolveSocket*> sockets;
 
 	// resolve interfaces - from PR#6646
diff -ru OrcaSlicer-2.2.0.old/src/slic3r/Utils/Bonjour.hpp OrcaSlicer-2.2.0/src/slic3r/Utils/Bonjour.hpp
--- OrcaSlicer-2.2.0.old/src/slic3r/Utils/Bonjour.hpp	2024-12-15 19:13:45.628341673 +0300
+++ OrcaSlicer-2.2.0/src/slic3r/Utils/Bonjour.hpp	2024-12-15 19:13:53.309681330 +0300
@@ -151,11 +151,11 @@
 	UdpSocket(Bonjour::ReplyFn replyfn
 		, const boost::asio::ip::address& multicast_address
 		, const boost::asio::ip::address& interface_address
-		, std::shared_ptr< boost::asio::io_service > io_service);
+		, std::shared_ptr< boost::asio::io_context > io_service);
 
 	UdpSocket(Bonjour::ReplyFn replyfn
 		, const boost::asio::ip::address& multicast_address
-		, std::shared_ptr< boost::asio::io_service > io_service);
+		, std::shared_ptr< boost::asio::io_context > io_service);
 
 	void send();
 	void async_receive();
@@ -168,7 +168,7 @@
 	boost::asio::ip::address					    multicast_address;
 	boost::asio::ip::udp::socket					socket;
 	boost::asio::ip::udp::endpoint					mcast_endpoint;
-	std::shared_ptr< boost::asio::io_service >	io_service;
+	std::shared_ptr< boost::asio::io_context >	io_service;
 	std::vector<BonjourRequest>						requests;
 };
 
@@ -182,7 +182,7 @@
 		, Bonjour::ReplyFn replyfn
 		, const boost::asio::ip::address& multicast_address
 		, const boost::asio::ip::address& interface_address
-		, std::shared_ptr< boost::asio::io_service > io_service)
+		, std::shared_ptr< boost::asio::io_context > io_service)
 		: UdpSocket(replyfn, multicast_address, interface_address, io_service)
 		, txt_keys(txt_keys)
 		, service(service)
@@ -199,7 +199,7 @@
 		, std::string protocol
 		, Bonjour::ReplyFn replyfn
 		, const boost::asio::ip::address& multicast_address
-		, std::shared_ptr< boost::asio::io_service > io_service)
+		, std::shared_ptr< boost::asio::io_context > io_service)
 		: UdpSocket(replyfn, multicast_address, io_service)
 		, txt_keys(txt_keys)
 		, service(service)
@@ -237,7 +237,7 @@
 		, Bonjour::ReplyFn replyfn
 		, const boost::asio::ip::address& multicast_address
 		, const boost::asio::ip::address& interface_address
-		, std::shared_ptr< boost::asio::io_service > io_service)
+		, std::shared_ptr< boost::asio::io_context > io_service)
 		: UdpSocket(replyfn, multicast_address, interface_address, io_service)
 		, hostname(hostname)
 
@@ -249,7 +249,7 @@
 	ResolveSocket(const std::string& hostname
 		, Bonjour::ReplyFn replyfn
 		, const boost::asio::ip::address& multicast_address
-		, std::shared_ptr< boost::asio::io_service > io_service)
+		, std::shared_ptr< boost::asio::io_context > io_service)
 		: UdpSocket(replyfn, multicast_address, io_service)
 		, hostname(hostname)
 
diff -ru OrcaSlicer-2.2.0.old/src/slic3r/Utils/Serial.cpp OrcaSlicer-2.2.0/src/slic3r/Utils/Serial.cpp
--- OrcaSlicer-2.2.0.old/src/slic3r/Utils/Serial.cpp	2024-12-15 19:13:45.628341673 +0300
+++ OrcaSlicer-2.2.0/src/slic3r/Utils/Serial.cpp	2024-12-15 19:13:53.309681330 +0300
@@ -278,11 +278,11 @@
 namespace asio = boost::asio;
 using boost::system::error_code;
 
-Serial::Serial(asio::io_service& io_service) :
+Serial::Serial(asio::io_context& io_service) :
 	asio::serial_port(io_service)
 {}
 
-Serial::Serial(asio::io_service& io_service, const std::string &name, unsigned baud_rate) :
+Serial::Serial(asio::io_context& io_service, const std::string &name, unsigned baud_rate) :
 	asio::serial_port(io_service, name)
 {
 	set_baud_rate(baud_rate);
diff -ru OrcaSlicer-2.2.0.old/src/slic3r/Utils/Serial.hpp OrcaSlicer-2.2.0/src/slic3r/Utils/Serial.hpp
--- OrcaSlicer-2.2.0.old/src/slic3r/Utils/Serial.hpp	2024-12-15 19:13:45.629341717 +0300
+++ OrcaSlicer-2.2.0/src/slic3r/Utils/Serial.hpp	2024-12-15 19:13:53.310681375 +0300
@@ -39,8 +39,8 @@
 class Serial : public boost::asio::serial_port
 {
 public:
-	Serial(boost::asio::io_service &io_service);
-	Serial(boost::asio::io_service &io_service, const std::string &name, unsigned baud_rate);
+	Serial(boost::asio::io_context &io_service);
+	Serial(boost::asio::io_context &io_service, const std::string &name, unsigned baud_rate);
 	Serial(const Serial &) = delete;
 	Serial &operator=(const Serial &) = delete;
 	~Serial();
diff -ru OrcaSlicer-2.2.0.old/src/slic3r/Utils/TCPConsole.cpp OrcaSlicer-2.2.0/src/slic3r/Utils/TCPConsole.cpp
--- OrcaSlicer-2.2.0.old/src/slic3r/Utils/TCPConsole.cpp	2024-10-27 18:12:10.000000000 +0300
+++ OrcaSlicer-2.2.0/src/slic3r/Utils/TCPConsole.cpp	2024-12-15 19:14:47.979101623 +0300
@@ -4,6 +4,7 @@
 #include <boost/asio/read_until.hpp>
 #include <boost/asio/steady_timer.hpp>
 #include <boost/asio/write.hpp>
+#include <boost/asio/connect.hpp>
 #include <boost/bind/bind.hpp>
 #include <boost/format.hpp>
 #include <boost/log/trivial.hpp>
@@ -167,9 +168,7 @@
 
         auto endpoints = m_resolver.resolve(m_host_name, m_port_name);
 
-        m_socket.async_connect(endpoints->endpoint(),
-            boost::bind(&TCPConsole::handle_connect, this, boost::placeholders::_1)
-        );
+        boost::asio::async_connect(m_socket, endpoints, boost::bind(&TCPConsole::handle_connect, this, boost::placeholders::_1));
 
         // Loop until we get any reasonable result. Negative result is also result.
         // TODO: Rewrite to more graceful way using deadlime_timer
