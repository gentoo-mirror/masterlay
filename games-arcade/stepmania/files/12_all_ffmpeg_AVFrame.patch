diff -ru stepmania-5.9999.old/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp stepmania-5.9999/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp
--- stepmania-5.9999.old/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp	2014-12-14 00:40:41.410744326 +0300
+++ stepmania-5.9999/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp	2014-12-14 00:43:33.609852779 +0300
@@ -112,6 +112,7 @@
 	m_fctx = NULL;
 	m_pStream = NULL;
 	m_iCurrentPacketOffset = -1;
+    m_Frame = avcodec::av_frame_alloc();
 
 	Init();
 }
@@ -267,7 +268,7 @@
 		m_Packet.data = m_Packet.size ? m_Packet.data : NULL;
 		int len = avcodec::avcodec_decode_video2(
 				m_pStream->codec, 
-				&m_Frame, &iGotFrame,
+				m_Frame, &iGotFrame,
 				&m_Packet );
 		CHECKPOINT;
 
@@ -285,10 +286,10 @@
 				m_iEOF = 2;
 			continue;
 		}
-
-		if( m_Frame.pkt_dts != AV_NOPTS_VALUE )
+        
+        if( m_Frame->pkt_dts != AV_NOPTS_VALUE )
 		{
-			m_fTimestamp = (float) (m_Frame.pkt_dts * av_q2d(m_pStream->time_base));
+            m_fTimestamp = (float) (m_Frame->pkt_dts * av_q2d(m_pStream->time_base));
 		}
 		else
 		{
@@ -299,7 +300,7 @@
 
 		/* Length of this frame: */
 		m_fLastFrameDelay = (float) av_q2d(m_pStream->time_base);
-		m_fLastFrameDelay += m_Frame.repeat_pict * (m_fLastFrameDelay * 0.5f);
+        m_fLastFrameDelay += m_Frame->repeat_pict * (m_fLastFrameDelay * 0.5f);
 
 		++m_iFrameNumber;
 
@@ -350,7 +351,7 @@
 	}
 
 	avcodec::sws_scale( m_swsctx,
-			m_Frame.data, m_Frame.linesize, 0, GetHeight(),
+            m_Frame->data, m_Frame->linesize, 0, GetHeight(),
 			pict.data, pict.linesize );
 }
 
diff -ru stepmania-5.9999.old/src/arch/MovieTexture/MovieTexture_FFMpeg.h stepmania-5.9999/src/arch/MovieTexture/MovieTexture_FFMpeg.h
--- stepmania-5.9999.old/src/arch/MovieTexture/MovieTexture_FFMpeg.h	2014-12-14 00:40:41.410744326 +0300
+++ stepmania-5.9999/src/arch/MovieTexture/MovieTexture_FFMpeg.h	2014-12-14 00:43:53.070128708 +0300
@@ -63,7 +63,7 @@
 	int DecodePacket( float fTargetTime );
 
 	avcodec::AVStream *m_pStream;
-	avcodec::AVFrame m_Frame;
+    avcodec::AVFrame *m_Frame;
 	avcodec::PixelFormat m_AVTexfmt; /* PixelFormat of output surface */
 	avcodec::SwsContext *m_swsctx;
 
