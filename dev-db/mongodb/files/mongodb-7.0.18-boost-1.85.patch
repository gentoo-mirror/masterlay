diff -ru mongo-r7.0.18.old/src/mongo/db/initialize_server_global_state.cpp mongo-r7.0.18/src/mongo/db/initialize_server_global_state.cpp
--- mongo-r7.0.18.old/src/mongo/db/initialize_server_global_state.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/db/initialize_server_global_state.cpp	2025-04-12 20:37:17.369326917 +0300
@@ -33,7 +33,7 @@
 #include "mongo/db/initialize_server_global_state.h"
 #include "mongo/db/initialize_server_global_state_gen.h"
 
-#include <boost/filesystem/operations.hpp>
+#include <boost/filesystem.hpp>
 #include <fmt/format.h>
 #include <iostream>
 #include <memory>
@@ -310,7 +310,7 @@
                                     << "\" should name a file, not a directory.");
         }
 
-        if (!serverGlobalParams.logAppend && boost::filesystem::is_regular(absoluteLogpath)) {
+        if (!serverGlobalParams.logAppend && boost::filesystem::is_regular_file(absoluteLogpath)) {
             std::string renameTarget = absoluteLogpath + "." + terseCurrentTimeForFilename();
             boost::system::error_code ec;
             boost::filesystem::rename(absoluteLogpath, renameTarget, ec);
diff -ru mongo-r7.0.18.old/src/mongo/db/startup_warnings_mongod.cpp mongo-r7.0.18/src/mongo/db/startup_warnings_mongod.cpp
--- mongo-r7.0.18.old/src/mongo/db/startup_warnings_mongod.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/db/startup_warnings_mongod.cpp	2025-04-12 20:37:17.369430618 +0300
@@ -33,6 +33,7 @@
 #include "mongo/db/startup_warnings_mongod.h"
 
 #include <boost/filesystem/operations.hpp>
+#include <boost/filesystem/exception.hpp>
 #include <fstream>
 
 #ifdef __linux__
Только в mongo-r7.0.18/src/mongo/db: startup_warnings_mongod.cpp.orig
diff -ru mongo-r7.0.18.old/src/mongo/db/storage/backup_block.cpp mongo-r7.0.18/src/mongo/db/storage/backup_block.cpp
--- mongo-r7.0.18.old/src/mongo/db/storage/backup_block.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/db/storage/backup_block.cpp	2025-04-12 20:39:43.202855429 +0300
@@ -59,7 +59,7 @@
 
     // Remove the file extension and convert to generic form (i.e. replace "\" with "/"
     // on windows, no-op on unix).
-    return boost::filesystem::change_extension(identWithExtension, "").generic_string();
+    return boost::filesystem::path(identWithExtension).replace_extension("").generic_string();
 }
 
 }  // namespace details
diff -ru mongo-r7.0.18.old/src/mongo/db/storage/storage_engine_lock_file_posix.cpp mongo-r7.0.18/src/mongo/db/storage/storage_engine_lock_file_posix.cpp
--- mongo-r7.0.18.old/src/mongo/db/storage/storage_engine_lock_file_posix.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/db/storage/storage_engine_lock_file_posix.cpp	2025-04-12 20:37:17.369511460 +0300
@@ -57,7 +57,7 @@
     // if called without a fully qualified path it asserts; that makes mongoperf fail.
     // so make a warning. need a better solution longer term.
     // massert(40389, str::stream() << "Couldn't find parent dir for file: " << file.string(),);
-    if (!file.has_branch_path()) {
+    if (!file.has_parent_path()) {
         LOGV2(22274,
               "warning flushMyDirectory couldn't find parent dir for file: {file}",
               "flushMyDirectory couldn't find parent dir for file",
@@ -66,7 +66,7 @@
     }
 
 
-    boost::filesystem::path dir = file.branch_path();  // parent_path in new boosts
+    boost::filesystem::path dir = file.parent_path();  // parent_path in new boosts
 
     LOGV2_DEBUG(22275, 1, "flushing directory {dir_string}", "dir_string"_attr = dir.string());
 
diff -ru mongo-r7.0.18.old/src/mongo/db/storage/storage_engine_metadata.cpp mongo-r7.0.18/src/mongo/db/storage/storage_engine_metadata.cpp
--- mongo-r7.0.18.old/src/mongo/db/storage/storage_engine_metadata.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/db/storage/storage_engine_metadata.cpp	2025-04-12 20:37:17.369570745 +0300
@@ -222,7 +222,7 @@
     // if called without a fully qualified path it asserts; that makes mongoperf fail.
     // so make a warning. need a better solution longer term.
     // massert(13652, str::stream() << "Couldn't find parent dir for file: " << file.string(),);
-    if (!file.has_branch_path()) {
+    if (!file.has_parent_path()) {
         LOGV2(22283,
               "warning flushMyDirectory couldn't find parent dir for file: {file}",
               "flushMyDirectory couldn't find parent dir for file",
@@ -231,7 +231,7 @@
     }
 
 
-    boost::filesystem::path dir = file.branch_path();  // parent_path in new boosts
+    boost::filesystem::path dir = file.parent_path();  // parent_path in new boosts
 
     LOGV2_DEBUG(22284, 1, "flushing directory {dir_string}", "dir_string"_attr = dir.string());
 
diff -ru mongo-r7.0.18.old/src/mongo/scripting/engine.cpp mongo-r7.0.18/src/mongo/scripting/engine.cpp
--- mongo-r7.0.18.old/src/mongo/scripting/engine.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/scripting/engine.cpp	2025-04-12 20:37:17.369645572 +0300
@@ -34,6 +34,7 @@
 
 #include <algorithm>
 #include <boost/filesystem/operations.hpp>
+#include <boost/filesystem/directory.hpp>
 
 #include "mongo/base/string_data.h"
 #include "mongo/client/dbclient_base.h"
diff -ru mongo-r7.0.18.old/src/mongo/shell/shell_utils_launcher.cpp mongo-r7.0.18/src/mongo/shell/shell_utils_launcher.cpp
--- mongo-r7.0.18.old/src/mongo/shell/shell_utils_launcher.cpp	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/shell/shell_utils_launcher.cpp	2025-04-12 20:37:17.369745417 +0300
@@ -36,6 +36,7 @@
 #include <boost/iostreams/stream_buffer.hpp>
 #include <boost/iostreams/tee.hpp>
 #include <csignal>
+#include <boost/filesystem.hpp>
 #include <fcntl.h>
 #include <fmt/format.h>
 #include <fstream>
@@ -316,26 +317,26 @@
     boost::filesystem::directory_iterator i(from);
     while (i != end) {
         boost::filesystem::path p = *i;
-        if (p.leaf() == "metrics.interim" || p.leaf() == "metrics.interim.temp") {
+        if (p.filename() == "metrics.interim" || p.filename() == "metrics.interim.temp") {
             // Ignore any errors for metrics.interim* files as these may disappear during copy
             boost::system::error_code ec;
-            boost::filesystem::copy_file(p, to / p.leaf(), ec);
+            boost::filesystem::copy_file(p, to / p.filename(), ec);
             if (ec) {
                 LOGV2_INFO(22814,
                            "Skipping copying of file from '{from}' to "
                            "'{to}' due to: {error}",
                            "Skipping copying of file due to error"
                            "from"_attr = p.generic_string(),
-                           "to"_attr = (to / p.leaf()).generic_string(),
+                           "to"_attr = (to / p.filename()).generic_string(),
                            "error"_attr = ec.message());
             }
-        } else if (p.leaf() != "mongod.lock" && p.leaf() != "WiredTiger.lock") {
+        } else if (p.filename() != "mongod.lock" && p.filename() != "WiredTiger.lock") {
             if (boost::filesystem::is_directory(p)) {
-                boost::filesystem::path newDir = to / p.leaf();
+                boost::filesystem::path newDir = to / p.filename();
                 boost::filesystem::create_directory(newDir);
                 copyDir(p, newDir);
             } else {
-                boost::filesystem::copy_file(p, to / p.leaf());
+                boost::filesystem::copy_file(p, to / p.filename());
             }
         }
         ++i;
diff -ru mongo-r7.0.18.old/src/mongo/shell/shell_utils_launcher.h mongo-r7.0.18/src/mongo/shell/shell_utils_launcher.h
--- mongo-r7.0.18.old/src/mongo/shell/shell_utils_launcher.h	2025-04-10 00:02:18.000000000 +0300
+++ mongo-r7.0.18/src/mongo/shell/shell_utils_launcher.h	2025-04-12 20:37:17.369812688 +0300
@@ -29,7 +29,7 @@
 
 #pragma once
 
-#include <boost/filesystem/convenience.hpp>
+#include <boost/filesystem/path.hpp>
 #include <map>
 #include <sstream>
 #include <string>
