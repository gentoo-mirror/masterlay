From aeb06269f74461af8ea2fa85be5361eb30fe5bf8 Mon Sep 17 00:00:00 2001
From: Perepechin Vladimir <perepechin.v.v@impermebel.ru>
Date: Mon, 13 Jul 2020 13:10:18 +1000
Subject: [PATCH] Try to fix error: multiple definition of 'deadbeef'

---
 src/menu.c | 27 +++++++++++++++++++++++++++
 src/sni.c  |  8 ++++++++
 src/sni.h  |  5 ++---
 3 files changed, 37 insertions(+), 3 deletions(-)

diff --git a/src/menu.c b/src/menu.c
index f018dfe..1bff418 100644
--- a/src/menu.c
+++ b/src/menu.c
@@ -49,31 +49,49 @@ create_menu_item (gchar *label, gchar *icon_name, SNIContextMenuItemType item_ty
 
 void
 on_quit_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     deadbeef->sendmessage (DB_EV_TERMINATE, 0, 0, 0);
 }
 
 void
 on_play_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     deadbeef_toggle_play_pause ();
 }
 
 void
 on_stop_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     deadbeef->sendmessage (DB_EV_STOP, 0, 0, 0);
 }
 
 void
 on_next_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     deadbeef->sendmessage (DB_EV_NEXT, 0, 0, 0);
 }
 
 void
 on_prev_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     deadbeef->sendmessage (DB_EV_PREV, 0, 0, 0);
 }
 
 void
 on_random_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     deadbeef->sendmessage (DB_EV_PLAY_RANDOM, 0, 0, 0);
 }
 
@@ -84,6 +102,9 @@ on_pref_activate (DbusmenuMenuitem *menuitem) {
 
 void
 on_playback_order_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     guint32 val = GPOINTER_TO_UINT (g_object_get_data (G_OBJECT (menuitem), "pb_data"));
     deadbeef->conf_set_int ("playback.order", val);
     deadbeef->sendmessage (DB_EV_CONFIGCHANGED, 0, 0, 0);
@@ -91,6 +112,9 @@ on_playback_order_activate (DbusmenuMenuitem *menuitem) {
 
 void
 on_playback_loop_activate (DbusmenuMenuitem *menuitem) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     guint32 val = GPOINTER_TO_UINT (g_object_get_data (G_OBJECT (menuitem), "pb_data"));
     deadbeef->conf_set_int ("playback.loop", val);
     deadbeef->sendmessage (DB_EV_CONFIGCHANGED, 0, 0, 0);
@@ -104,6 +128,9 @@ void check_list (gpointer item, gpointer data) {
 
 void
 update_playback_controls (void) {
+    DB_functions_t *deadbeef = deadbeef_get_instance ();
+    if (deadbeef == NULL)
+        return;
     guint32 order = deadbeef->conf_get_int ("playback.order", 0);
     guint32 loop  = deadbeef->conf_get_int ("playback.loop", 0);
 
diff --git a/src/sni.c b/src/sni.c
index 900bdce..33f97c0 100644
--- a/src/sni.c
+++ b/src/sni.c
@@ -41,8 +41,16 @@ static StatusNotifier *icon = NULL;
 static DB_plugin_action_t *toggle_mainwindow_action = NULL;
 static DB_plugin_action_t *preferences_action = NULL;
 
+DB_functions_t *deadbeef = NULL;
+static ddb_gtkui_t *gtkui_plugin;
+
 void sni_update_status ();
 
+DB_functions_t *
+deadbeef_get_instance (void) {
+    return deadbeef;
+}
+
 void
 on_activate_requested (void) {
     if (toggle_mainwindow_action && 0) {
diff --git a/src/sni.h b/src/sni.h
index f55dbf9..ed642db 100644
--- a/src/sni.h
+++ b/src/sni.h
@@ -43,8 +43,7 @@
 
 #include <extras/statusnotifier/src/statusnotifier.h>
 
-DB_functions_t *deadbeef;
-static ddb_gtkui_t *gtkui_plugin;
+DB_functions_t * deadbeef_get_instance (void);
 
 typedef enum {
     SNI_MENU_ITEM_PLAY,
@@ -75,4 +74,4 @@ gboolean deadbeef_preferences_available (void);
 void deadbeef_preferences_activate (void);
 
 
-#endif
\ No newline at end of file
+#endif
